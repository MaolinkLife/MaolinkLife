{"version":3,"sources":["webpack:///src/app/pages/auth/auth-routing.module.ts","webpack:///src/app/pages/auth/auth.component.ts","webpack:///src/app/pages/auth/auth.component.html","webpack:///src/app/pages/auth/auth.module.ts","webpack:///src/app/pages/auth/components/login/login.component.ts","webpack:///src/app/pages/auth/components/login/login.component.html","webpack:///src/app/pages/auth/components/register/register.component.ts","webpack:///src/app/pages/auth/components/register/register.component.html","webpack:///src/app/pages/auth/components/reset-password/reset-password.component.ts","webpack:///src/app/pages/auth/components/reset-password/reset-password.component.html"],"names":["routes","path","component","children","redirectTo","pathMatch","AuthRoutingModule","forChild","imports","exports","AuthComponent","authService","router","console","log","authorization","navigateByUrl","selector","templateUrl","styleUrls","changeDetection","OnPush","AuthModule","declarations","LoginComponent","formGroup","login","required","password","errorMessage$","destroyed$","next","complete","value","login$","pipe","subscribe","result","Result","currentUser","auth$","updateSessionStorage","Message","submit","RegisterComponent","email","result$","register$","ResetPasswordComponent"],"mappings":"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","file":"pages-auth-auth-module-es5.js","sourcesContent":["import { MainComponent } from './../main.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthComponent } from './auth.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AuthComponent,\r\n        children: [\r\n            {\r\n                path: 'login',\r\n                component: LoginComponent,\r\n            },\r\n            {\r\n                path: 'register',\r\n                component: RegisterComponent,\r\n            },\r\n            {\r\n                path: 'reset-password',\r\n                component: ResetPasswordComponent,\r\n            },\r\n            {\r\n                path: '**',\r\n                redirectTo: 'login',\r\n                pathMatch: 'full'\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Router } from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-auth',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        console.log(this.authService.authorization)\r\n\r\n        if (this.authService.authorization) {\r\n            this.router.navigateByUrl('/main');\r\n        }\r\n    }\r\n}\r\n","<div class=\"left-column\">\r\n    <div class=\"left-column_header\">\r\n        <div class=\"logo\">\r\n            <micro-world-logo></micro-world-logo>\r\n        </div>\r\n        <div class=\"subtitle\">Себя мы видим только чужими глазами</div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div data-component=\"mui-popup\" data-host-size=\"l\">\r\n    <div class=\"mui-popup__container\">\r\n        <div class=\"mui-popup__body\">\r\n            <div class=\"title\">\r\n                <span>\r\n                    Чтобы войти на сайт введите логин и пароль от своего\r\n                    аккаунта или <a>зарегистрируйтесь</a>\r\n                </span>\r\n            </div>\r\n            <form [formGroup]=\"formGroup\" (submit)=\"sendLoginData()\">\r\n                <input\r\n                    formControlName=\"login\"\r\n                    type=\"text\"\r\n                    placeholder=\"login\"\r\n                />\r\n                <input\r\n                    formControlName=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                />\r\n                <button type=\"submit\">Войти</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n","import { MicroWorldLogoModule } from './../../shared/components/micro-world-logo/micro-world-logo.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AuthComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        ResetPasswordComponent\r\n    ],\r\n    imports: [\r\n        HttpClientModule,\r\n        CommonModule,\r\n        AuthRoutingModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MicroWorldLogoModule,\r\n    ]\r\n})\r\nexport class AuthModule { }\r\n","import { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { AuthService, UserInterface } from './../../services/auth.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n    public formGroup: FormGroup = new FormGroup({\r\n        login: new FormControl(null, Validators.required),\r\n        password: new FormControl(null, Validators.required),\r\n    });\r\n\r\n    public errorMessage$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n    private destroyed$: Subject<void> = new Subject();\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n        this.destroyed$.complete();\r\n    }\r\n\r\n    public submit(): void {\r\n        const { login, password }: Record<string, string> = this.formGroup.value;\r\n\r\n        this.authService.login$(login, password).pipe(\r\n            takeUntil(this.destroyed$)\r\n        ).subscribe(\r\n            (result: UserInterface) => {\r\n                if (result.Result) {\r\n                    this.authService.currentUser = result;\r\n                    this.authService.auth$.next(true);\r\n                    this.authService.updateSessionStorage();\r\n\r\n                    this.router.navigateByUrl('/main');\r\n                }\r\n\r\n                if (result.Message && !result.Result) {\r\n                    this.errorMessage$.next(result.Message);\r\n                }\r\n\r\n                console.log(this.authService.currentUser);\r\n                console.log(this.authService.auth$);\r\n            }\r\n        )\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title mui-space_bottom-5\">\r\n        Добро пожаловать\r\n    </div>\r\n\r\n    <div class=\"default-text mui-space_bottom-3\">\r\n        Для входа используйте логин и пароль от своей учетной записи\r\n    </div>\r\n\r\n    <form [formGroup]=\"formGroup\" class=\"form\" (submit)=\"submit()\">\r\n        <div class=\"input-form mui-space_bottom-5\">\r\n            <label class=\"label\" for=\"\">Login</label>\r\n            <input\r\n                formControlName=\"login\"\r\n                type=\"text\"\r\n                class=\"input\"\r\n                placeholder=\"Enter your login\"\r\n                autocomplete=\"off\"\r\n            />\r\n        </div>\r\n\r\n        <div class=\"input-form mui-space_bottom-5\">\r\n            <label class=\"label\" for=\"\">\r\n                <span>Password</span>\r\n\r\n                <a [routerLink]=\"\" class=\"mui-text_body-s\">\r\n                    Forgot your password?\r\n                </a>\r\n            </label>\r\n\r\n            <input\r\n                formControlName=\"password\"\r\n                type=\"password\"\r\n                class=\"input\"\r\n                placeholder=\"Enter your password\"\r\n                autocomplete=\"off\"\r\n            />\r\n        </div>\r\n\r\n        <div *ngIf=\"errorMessage$ | async as message\" class=\"error\">\r\n            {{ message }}\r\n        </div>\r\n\r\n        <button class=\"button\" type=\"submit\" [disabled]=\"formGroup.invalid\">\r\n            Войти\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"default-text\">\r\n    Если у вас еще нет учетной записи\r\n    <a class=\"link\" [routerLink]=\"['/auth/register']\">зарегистрируйтесь</a>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { AuthService, UserInterface } from '../../services/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    public formGroup: FormGroup = new FormGroup({\r\n        email: new FormControl(null, [Validators.required, Validators.email]),\r\n        login: new FormControl(null, Validators.required),\r\n        password: new FormControl(null, Validators.required),\r\n    });\r\n\r\n    public result$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n    private destroyed$: Subject<void> = new Subject();\r\n\r\n    public errorMessage$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.result$.next(false);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n        this.destroyed$.complete();\r\n    }\r\n\r\n    public submit(): void {\r\n        const { login, password, email }: Record<string, string> = this.formGroup.value;\r\n\r\n        this.authService.register$(login, password, email).pipe(\r\n            takeUntil(this.destroyed$)\r\n        ).subscribe(\r\n            (result: UserInterface) => {\r\n                console.log('result', result);\r\n                console.log('message' ,result.Message);\r\n                console.log('status', result.Result);\r\n\r\n                if (result.Result) {\r\n                    this.result$.next(true);\r\n                }\r\n\r\n\r\n                if (result.Message) {\r\n                    this.errorMessage$.next(result.Message);\r\n\r\n                    console.log('error message', this.errorMessage$.value)\r\n                }\r\n\r\n\r\n            }\r\n        )\r\n    }\r\n}\r\n","<div *ngIf=\"!(result$ | async); else resultTemplate\" class=\"container\">\r\n    <div>\r\n        <div class=\"title mui-space_bottom-5\">\r\n            Регистрация\r\n        </div>\r\n\r\n        <div class=\"default-text mui-space_bottom-3\">\r\n            Для регистрации придумайте логин, пароль и введите свою почту.\r\n        </div>\r\n\r\n        <form [formGroup]=\"formGroup\" class=\"form\" (submit)=\"submit()\">\r\n            <div class=\"input-form mui-space_bottom-5\">\r\n                <label class=\"label\" for=\"\">Email</label>\r\n                <input\r\n                    formControlName=\"email\"\r\n                    type=\"text\"\r\n                    class=\"input\"\r\n                    placeholder=\"Enter your email\"\r\n                    autocomplete=\"on\"\r\n                />\r\n            </div>\r\n            <div class=\"input-form mui-space_bottom-5\">\r\n                <label class=\"label\" for=\"\">Login</label>\r\n                <input\r\n                    formControlName=\"login\"\r\n                    type=\"text\"\r\n                    class=\"input\"\r\n                    placeholder=\"Enter your login\"\r\n                />\r\n            </div>\r\n\r\n            <div class=\"input-form mui-space_bottom-5\">\r\n                <label class=\"label\" for=\"\">Password</label>\r\n                <input\r\n                    formControlName=\"password\"\r\n                    type=\"password\"\r\n                    class=\"input\"\r\n                    placeholder=\"Enter your password\"\r\n                />\r\n            </div>\r\n\r\n            <div *ngIf=\"errorMessage$ | async as message\" class=\"error\">\r\n                {{ message }}\r\n            </div>\r\n\r\n            <button class=\"button\" type=\"submit\" [disabled]=\"formGroup.invalid\">\r\n                Зарегистрироваться\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"default-text\">\r\n        Если у вас уже есть учётная запись, то вы можете\r\n        <a class=\"link\" [routerLink]=\"['/auth/login']\">войти</a>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #resultTemplate>\r\n    <div class=\"result\">\r\n        <div class=\"result__content\">\r\n            <div class=\"title mui-space_bottom-5\">\r\n                Успех!\r\n            </div>\r\n            <div class=\"default-text mui-space_bottom-3\">\r\n                Регистрация прошла успешно. Теперь вы можете войти в свою\r\n                учётную запись, используя свой логин и пароль.\r\n            </div>\r\n        </div>\r\n\r\n        <button class=\"button\" [routerLink]=\"['/auth/login']\">\r\n            Войти в учетную запись\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-reset-password',\r\n    templateUrl: './reset-password.component.html',\r\n    styleUrls: ['./reset-password.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n\r\n    public formGroup: FormGroup = new FormGroup({\r\n        email: new FormControl(null, Validators.required),\r\n    });\r\n\r\n    private destroyed$: Subject<void> = new Subject();\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n        this.destroyed$.complete();\r\n    }\r\n\r\n    // public submit(): void {\r\n    //     const { login, password, email }: Record<string, string> = this.formGroup.value;\r\n\r\n    //     this.authService.register$(login, password, email).pipe(\r\n    //         takeUntil(this.destroyed$)\r\n    //     ).subscribe(\r\n    //         result => {\r\n    //             console.log(result);\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title mui-space_bottom-5\">\r\n        Восстановление пароля\r\n    </div>\r\n\r\n    <div class=\"default-text mui-space_bottom-3\">\r\n        Для восстановления пароля от учётной записи укажите адрес почты, которую\r\n        использовали при регистрации\r\n    </div>\r\n\r\n    <form [formGroup]=\"formGroup\" class=\"form\">\r\n        <div class=\"input-form mui-space_bottom-5\">\r\n            <label class=\"label\" for=\"\">Email</label>\r\n            <input\r\n                formControlName=\"email\"\r\n                type=\"text\"\r\n                class=\"input\"\r\n                placeholder=\"Enter your login\"\r\n            />\r\n        </div>\r\n\r\n        <button class=\"button\" type=\"submit\" [disabled]=\"formGroup.invalid\">\r\n            Отправить письмо\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"default-text\">\r\n    Вернуться обратно на страницу\r\n    <a class=\"link\" [routerLink]=\"['/auth/login']\">авторизации</a>\r\n</div>\r\n"]}