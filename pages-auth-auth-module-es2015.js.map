{"version":3,"sources":["./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/auth.component.ts","./src/app/pages/auth/auth.component.html","./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/components/login/login.component.ts","./src/app/pages/auth/components/login/login.component.html","./src/app/pages/auth/components/register/register.component.ts","./src/app/pages/auth/components/register/register.component.html","./src/app/pages/auth/components/reset-password/reset-password.component.ts","./src/app/pages/auth/components/reset-password/reset-password.component.html"],"names":[],"mappings":"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","file":"pages-auth-auth-module-es2015.js","sourcesContent":["import { MainComponent } from './../main.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthComponent } from './auth.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AuthComponent,\r\n        children: [\r\n            {\r\n                path: 'login',\r\n                component: LoginComponent,\r\n            },\r\n            {\r\n                path: 'register',\r\n                component: RegisterComponent,\r\n            },\r\n            {\r\n                path: 'reset-password',\r\n                component: ResetPasswordComponent,\r\n            },\r\n            {\r\n                path: '**',\r\n                redirectTo: 'login',\r\n                pathMatch: 'full'\r\n            },\r\n        ],\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Router } from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\nimport { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-auth',\r\n    templateUrl: './auth.component.html',\r\n    styleUrls: ['./auth.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        console.log(this.authService.authorization)\r\n\r\n        if (this.authService.authorization) {\r\n            this.router.navigateByUrl('/main');\r\n        }\r\n    }\r\n}\r\n","<div class=\"left-column\">\r\n    <div class=\"left-column_header\">\r\n        <div class=\"logo\">\r\n            <micro-world-logo></micro-world-logo>\r\n        </div>\r\n        <div class=\"subtitle\">Себя мы видим только чужими глазами</div>\r\n    </div>\r\n\r\n    <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n<!-- <div data-component=\"mui-popup\" data-host-size=\"l\">\r\n    <div class=\"mui-popup__container\">\r\n        <div class=\"mui-popup__body\">\r\n            <div class=\"title\">\r\n                <span>\r\n                    Чтобы войти на сайт введите логин и пароль от своего\r\n                    аккаунта или <a>зарегистрируйтесь</a>\r\n                </span>\r\n            </div>\r\n            <form [formGroup]=\"formGroup\" (submit)=\"sendLoginData()\">\r\n                <input\r\n                    formControlName=\"login\"\r\n                    type=\"text\"\r\n                    placeholder=\"login\"\r\n                />\r\n                <input\r\n                    formControlName=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                />\r\n                <button type=\"submit\">Войти</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n","import { MicroWorldLogoModule } from './../../shared/components/micro-world-logo/micro-world-logo.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { AuthComponent } from './auth.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AuthComponent,\r\n        LoginComponent,\r\n        RegisterComponent,\r\n        ResetPasswordComponent\r\n    ],\r\n    imports: [\r\n        HttpClientModule,\r\n        CommonModule,\r\n        AuthRoutingModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MicroWorldLogoModule,\r\n    ]\r\n})\r\nexport class AuthModule { }\r\n","import { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { AuthService, UserInterface } from './../../services/auth.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n    public formGroup: FormGroup = new FormGroup({\r\n        login: new FormControl(null, Validators.required),\r\n        password: new FormControl(null, Validators.required),\r\n    });\r\n\r\n    public errorMessage$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n    private destroyed$: Subject<void> = new Subject();\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n        this.destroyed$.complete();\r\n    }\r\n\r\n    public submit(): void {\r\n        const { login, password }: Record<string, string> = this.formGroup.value;\r\n\r\n        this.authService.login$(login, password).pipe(\r\n            takeUntil(this.destroyed$)\r\n        ).subscribe(\r\n            (result: UserInterface) => {\r\n                if (result.Result) {\r\n                    this.authService.currentUser = result;\r\n                    this.authService.auth$.next(true);\r\n                    this.authService.updateSessionStorage();\r\n\r\n                    this.router.navigateByUrl('/main');\r\n                }\r\n\r\n                if (result.Message && !result.Result) {\r\n                    this.errorMessage$.next(result.Message);\r\n                }\r\n\r\n                console.log(this.authService.currentUser);\r\n                console.log(this.authService.auth$);\r\n            }\r\n        )\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title mui-space_bottom-5\">\r\n        Добро пожаловать\r\n    </div>\r\n\r\n    <div class=\"default-text mui-space_bottom-3\">\r\n        Для входа используйте логин и пароль от своей учетной записи\r\n    </div>\r\n\r\n    <form [formGroup]=\"formGroup\" class=\"form\" (submit)=\"submit()\">\r\n        <div class=\"input-form mui-space_bottom-5\">\r\n            <label class=\"label\" for=\"\">Login</label>\r\n            <input\r\n                formControlName=\"login\"\r\n                type=\"text\"\r\n                class=\"input\"\r\n                placeholder=\"Enter your login\"\r\n                autocomplete=\"off\"\r\n            />\r\n        </div>\r\n\r\n        <div class=\"input-form mui-space_bottom-5\">\r\n            <label class=\"label\" for=\"\">\r\n                <span>Password</span>\r\n\r\n                <a [routerLink]=\"\" class=\"mui-text_body-s\">\r\n                    Forgot your password?\r\n                </a>\r\n            </label>\r\n\r\n            <input\r\n                formControlName=\"password\"\r\n                type=\"password\"\r\n                class=\"input\"\r\n                placeholder=\"Enter your password\"\r\n                autocomplete=\"off\"\r\n            />\r\n        </div>\r\n\r\n        <div *ngIf=\"errorMessage$ | async as message\" class=\"error\">\r\n            {{ message }}\r\n        </div>\r\n\r\n        <button class=\"button\" type=\"submit\" [disabled]=\"formGroup.invalid\">\r\n            Войти\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"default-text\">\r\n    Если у вас еще нет учетной записи\r\n    <a class=\"link\" [routerLink]=\"['/auth/register']\">зарегистрируйтесь</a>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { AuthService, UserInterface } from '../../services/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    public formGroup: FormGroup = new FormGroup({\r\n        email: new FormControl(null, [Validators.required, Validators.email]),\r\n        login: new FormControl(null, Validators.required),\r\n        password: new FormControl(null, Validators.required),\r\n    });\r\n\r\n    public result$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n    private destroyed$: Subject<void> = new Subject();\r\n\r\n    public errorMessage$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.result$.next(false);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n        this.destroyed$.complete();\r\n    }\r\n\r\n    public submit(): void {\r\n        const { login, password, email }: Record<string, string> = this.formGroup.value;\r\n\r\n        this.authService.register$(login, password, email).pipe(\r\n            takeUntil(this.destroyed$)\r\n        ).subscribe(\r\n            (result: UserInterface) => {\r\n                console.log('result', result);\r\n                console.log('message' ,result.Message);\r\n                console.log('status', result.Result);\r\n\r\n                if (result.Result) {\r\n                    this.result$.next(true);\r\n                }\r\n\r\n\r\n                if (result.Message) {\r\n                    this.errorMessage$.next(result.Message);\r\n\r\n                    console.log('error message', this.errorMessage$.value)\r\n                }\r\n\r\n\r\n            }\r\n        )\r\n    }\r\n}\r\n","<div *ngIf=\"!(result$ | async); else resultTemplate\" class=\"container\">\r\n    <div>\r\n        <div class=\"title mui-space_bottom-5\">\r\n            Регистрация\r\n        </div>\r\n\r\n        <div class=\"default-text mui-space_bottom-3\">\r\n            Для регистрации придумайте логин, пароль и введите свою почту.\r\n        </div>\r\n\r\n        <form [formGroup]=\"formGroup\" class=\"form\" (submit)=\"submit()\">\r\n            <div class=\"input-form mui-space_bottom-5\">\r\n                <label class=\"label\" for=\"\">Email</label>\r\n                <input\r\n                    formControlName=\"email\"\r\n                    type=\"text\"\r\n                    class=\"input\"\r\n                    placeholder=\"Enter your email\"\r\n                    autocomplete=\"on\"\r\n                />\r\n            </div>\r\n            <div class=\"input-form mui-space_bottom-5\">\r\n                <label class=\"label\" for=\"\">Login</label>\r\n                <input\r\n                    formControlName=\"login\"\r\n                    type=\"text\"\r\n                    class=\"input\"\r\n                    placeholder=\"Enter your login\"\r\n                />\r\n            </div>\r\n\r\n            <div class=\"input-form mui-space_bottom-5\">\r\n                <label class=\"label\" for=\"\">Password</label>\r\n                <input\r\n                    formControlName=\"password\"\r\n                    type=\"password\"\r\n                    class=\"input\"\r\n                    placeholder=\"Enter your password\"\r\n                />\r\n            </div>\r\n\r\n            <div *ngIf=\"errorMessage$ | async as message\" class=\"error\">\r\n                {{ message }}\r\n            </div>\r\n\r\n            <button class=\"button\" type=\"submit\" [disabled]=\"formGroup.invalid\">\r\n                Зарегистрироваться\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n    <div class=\"default-text\">\r\n        Если у вас уже есть учётная запись, то вы можете\r\n        <a class=\"link\" [routerLink]=\"['/auth/login']\">войти</a>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #resultTemplate>\r\n    <div class=\"result\">\r\n        <div class=\"result__content\">\r\n            <div class=\"title mui-space_bottom-5\">\r\n                Успех!\r\n            </div>\r\n            <div class=\"default-text mui-space_bottom-3\">\r\n                Регистрация прошла успешно. Теперь вы можете войти в свою\r\n                учётную запись, используя свой логин и пароль.\r\n            </div>\r\n        </div>\r\n\r\n        <button class=\"button\" [routerLink]=\"['/auth/login']\">\r\n            Войти в учетную запись\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Subject } from 'rxjs';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-reset-password',\r\n    templateUrl: './reset-password.component.html',\r\n    styleUrls: ['./reset-password.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n\r\n    public formGroup: FormGroup = new FormGroup({\r\n        email: new FormControl(null, Validators.required),\r\n    });\r\n\r\n    private destroyed$: Subject<void> = new Subject();\r\n\r\n    constructor(private authService: AuthService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroyed$.next();\r\n        this.destroyed$.complete();\r\n    }\r\n\r\n    // public submit(): void {\r\n    //     const { login, password, email }: Record<string, string> = this.formGroup.value;\r\n\r\n    //     this.authService.register$(login, password, email).pipe(\r\n    //         takeUntil(this.destroyed$)\r\n    //     ).subscribe(\r\n    //         result => {\r\n    //             console.log(result);\r\n    //         }\r\n    //     )\r\n    // }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title mui-space_bottom-5\">\r\n        Восстановление пароля\r\n    </div>\r\n\r\n    <div class=\"default-text mui-space_bottom-3\">\r\n        Для восстановления пароля от учётной записи укажите адрес почты, которую\r\n        использовали при регистрации\r\n    </div>\r\n\r\n    <form [formGroup]=\"formGroup\" class=\"form\">\r\n        <div class=\"input-form mui-space_bottom-5\">\r\n            <label class=\"label\" for=\"\">Email</label>\r\n            <input\r\n                formControlName=\"email\"\r\n                type=\"text\"\r\n                class=\"input\"\r\n                placeholder=\"Enter your login\"\r\n            />\r\n        </div>\r\n\r\n        <button class=\"button\" type=\"submit\" [disabled]=\"formGroup.invalid\">\r\n            Отправить письмо\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<div class=\"default-text\">\r\n    Вернуться обратно на страницу\r\n    <a class=\"link\" [routerLink]=\"['/auth/login']\">авторизации</a>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}